0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/7.6.0/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@4.1.2
3 info using node@v7.6.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/flaviotulino/workspace/AngularCbC',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/flaviotulino/.npm/angular-cbc/2.1.52/package.tgz not in flight; packing
9 verbose correctMkdir /Users/flaviotulino/.npm correctMkdir not in flight; initializing
10 info lifecycle angular-cbc@2.1.52~prepublish: angular-cbc@2.1.52
11 silly lifecycle angular-cbc@2.1.52~prepublish: no script for prepublish, continuing
12 info lifecycle angular-cbc@2.1.52~prepare: angular-cbc@2.1.52
13 silly lifecycle angular-cbc@2.1.52~prepare: no script for prepare, continuing
14 verbose tar pack [ '/Users/flaviotulino/.npm/angular-cbc/2.1.52/package.tgz',
14 verbose tar pack   '/Users/flaviotulino/workspace/AngularCbC' ]
15 verbose tarball /Users/flaviotulino/.npm/angular-cbc/2.1.52/package.tgz
16 verbose folder /Users/flaviotulino/workspace/AngularCbC
17 verbose addLocalTarball adding from inside cache /Users/flaviotulino/.npm/angular-cbc/2.1.52/package.tgz
18 verbose correctMkdir /Users/flaviotulino/.npm correctMkdir not in flight; initializing
19 silly cache afterAdd angular-cbc@2.1.52
20 verbose afterAdd /Users/flaviotulino/.npm/angular-cbc/2.1.52/package/package.json not in flight; writing
21 verbose correctMkdir /Users/flaviotulino/.npm correctMkdir not in flight; initializing
22 verbose afterAdd /Users/flaviotulino/.npm/angular-cbc/2.1.52/package/package.json written
23 silly publish { name: 'angular-cbc',
23 silly publish   version: '2.1.52',
23 silly publish   bin: { 'angular-cbc': './index.js' },
23 silly publish   description: 'Code Angular by conventions!',
23 silly publish   main: 'index.js',
23 silly publish   author: '',
23 silly publish   license: 'ISC',
23 silly publish   dependencies: { 'fs-extra': '^2.1.2' },
23 silly publish   repository:
23 silly publish    { type: 'git',
23 silly publish      url: 'git+https://github.com/flaviotulino/angular-cbc.git' },
23 silly publish   readme: '# Angular CBC - code angular by conventions!\nThe purpose of this module is to provide a quick way to start a new Angular 1.x application, using ES6 modules and its awesome syntax!\nYou will use some conventions in order to maximize the result with less effort!\n\n## Usage\n### Install\n> Please be sure you have already run ```npm init``` command in your project!\n\nOnce you\'re sure you have a valid package.json file, run these commands in your shell:\n- ```npm i angular-cbc```\n- ```./node_modules/.bin/angular-cbc install```\n\n### Concepts your should know\nThis project uses Angular UI Router, an awesome Angular module which provides states instead of routes and a lot of possibilities. [Take a look if you don\'t know it!](https://github.com/angular-ui/ui-router)\n\n### Effects\nSomething happened... Your project now has a new structure, with a js folder, a css folder, an index.html file, a webpack.config.js file and a pages folder.\n\n#### js folder\nIn this folder you will have:\n- **app.js**, if you know Angular you know what\'s that. But there is just one difference: basically you do not have to touch this file... maybe never! :)\n- **routes.js**, this file contains an array of routes that will be automatically used in this project! Just provide a name for the route, a matching URL and the controller used in this route! That\'s it!\n\n> **The first convention**\nEach routes/state uses a template called as the route itself. So, if you provide a named state like **home**, the file under **pages/home.html** will be rendered!\nAnother example with nested states? Let\'s imagine we are under a state called **home.list**... well, it\'s assumed the template to be used is **pages/home.list.html**!\n\n- **config.js**, sets the routes and some other initial configs\n- **directives.js**, this file is used to import all the directives you will write. Don\'t forget to do **not** edit this file! It\'s autogenerated!\n\n> **The second convention**\nIn order to write autoloading directives, you must to write them inside the **directives** folder, creating a sub folder with the same name of the .js file you will create... An example:\nWe are going to create a navbar directive; let\'s create a **navbar** folder under the directives one, and a **navbar.js** file inside the **navbar folder**\nNote: Don\'t forget to export the function itself, according to the new ES6 module syntax\n\n```javascript\nexport default function navbar() {\n    return {\n        link: ...\n        template: ...\n    }\n}\n```\n\n#### js/controllers folder\nPut your controllers in this folder, export the class by default and import it inside your routes file, creating a controller entry inside any object\n\nFrom routes.js\n```javascript\n    import HomeController from \'./controllers/HomeController\'\n    ...\n    [\n        name: \'home\',\n        url: \'/home\',\n        controller: HomeController\n    ]\n    ...\n```\n\n> **The third convention**\nYou must extend the BaseController in any controller your create, in this way you can use the controller name to refer to its scope inside your html templates.\nExample:\nWe create an HomeController, which extends BaseController. We set this controller in the routes file for the home state.\nWe set in the HomeController constructor two fields:\n\n\n```javascript\n    export default class HomeController extends BaseController{\n        constructor($scope){\n            super($scope)\n            this.name = \'Test\'\n            this.surname = \'McTest\'\n            }\n        }\n```\n\nWe want to show data in pages/home.html, and we can refer to the scope using home.name and home.surname! So basically the controller name withouth the controller suffix by convention!\n> TIP: you can refer to the controller scope inside the html template also using the dollar sign... Just a shortcut so!\n```\n    <div>\n        {{home.name}} is equivalent to\n        {{$.name}}\n    </div>\n    <div>\n        {{home.surname}} is equivalent to\n        {{$.surname}}\n    </div>\n```\n\n### Run\nTo run the project, just type `npm start` in your terminal and visit http://localhost:8080 from your browser\n\n\n## Contributors Guide\nI would be happy if anyone will contribute with coding or just with ideas! The Git repository is [this one](https://github.com/flaviotulino/angular-cbc)\n\n### App folder\nThe app folder is the folder that will be downloaded by the module, in order to copy files and directory locally for the user who run the install command.\n\nYou can clone the repo and treat the app folder as an Angular app. Anything put under this folder will be copied into the user project, unless you do not set a filter in the dirCopy function in index.js (~ line 22)\n',
23 silly publish   readmeFilename: 'README.md',
23 silly publish   gitHead: '13d36c8bb12d75af462c5004866214e37e7bd153',
23 silly publish   bugs: { url: 'https://github.com/flaviotulino/angular-cbc/issues' },
23 silly publish   homepage: 'https://github.com/flaviotulino/angular-cbc#readme',
23 silly publish   _id: 'angular-cbc@2.1.52',
23 silly publish   scripts: {},
23 silly publish   _shasum: 'fdf78e8d29c61425732ff7aa3094a84cfeb95d5a',
23 silly publish   _from: '.' }
24 info lifecycle angular-cbc@2.1.52~prepublishOnly: angular-cbc@2.1.52
25 silly lifecycle angular-cbc@2.1.52~prepublishOnly: no script for prepublishOnly, continuing
26 verbose getPublishConfig undefined
27 silly mapToRegistry name angular-cbc
28 silly mapToRegistry using default registry
29 silly mapToRegistry registry https://registry.npmjs.org/
30 silly mapToRegistry data Result {
30 silly mapToRegistry   raw: 'angular-cbc',
30 silly mapToRegistry   scope: null,
30 silly mapToRegistry   escapedName: 'angular-cbc',
30 silly mapToRegistry   name: 'angular-cbc',
30 silly mapToRegistry   rawSpec: '',
30 silly mapToRegistry   spec: 'latest',
30 silly mapToRegistry   type: 'tag' }
31 silly mapToRegistry uri https://registry.npmjs.org/angular-cbc
32 verbose publish registryBase https://registry.npmjs.org/
33 silly publish uploading /Users/flaviotulino/.npm/angular-cbc/2.1.52/package.tgz
34 verbose request uri https://registry.npmjs.org/angular-cbc
35 verbose request sending authorization for write operation
36 info attempt registry request try #1 at 19:20:47
37 verbose request using bearer token for auth
38 verbose request id 04016951c60d5f3a
39 http request PUT https://registry.npmjs.org/angular-cbc
40 http 403 https://registry.npmjs.org/angular-cbc
41 verbose headers { 'content-type': 'application/json',
41 verbose headers   'cache-control': 'max-age=300',
41 verbose headers   'content-length': '96',
41 verbose headers   'accept-ranges': 'bytes',
41 verbose headers   date: 'Sun, 28 May 2017 18:20:48 GMT',
41 verbose headers   via: '1.1 varnish',
41 verbose headers   connection: 'keep-alive',
41 verbose headers   'x-served-by': 'cache-lcy1141-LCY',
41 verbose headers   'x-cache': 'MISS',
41 verbose headers   'x-cache-hits': '0',
41 verbose headers   'x-timer': 'S1495995647.432310,VS0,VE1140',
41 verbose headers   vary: 'Accept-Encoding' }
42 verbose request invalidating /Users/flaviotulino/.npm/registry.npmjs.org/angular-cbc on PUT
43 error publish Failed PUT 403
44 verbose stack Error: "You cannot publish over the previously published version 2.1.52." : angular-cbc
44 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:304:12)
44 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:292:14)
44 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:212:14)
44 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:186:22)
44 verbose stack     at emitTwo (events.js:106:13)
44 verbose stack     at Request.emit (events.js:192:7)
44 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1081:10)
44 verbose stack     at emitOne (events.js:96:13)
44 verbose stack     at Request.emit (events.js:189:7)
44 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1001:12)
45 verbose statusCode 403
46 verbose pkgid angular-cbc
47 verbose cwd /Users/flaviotulino/workspace/AngularCbC
48 error Darwin 16.0.0
49 error argv "/usr/local/Cellar/node/7.6.0/bin/node" "/usr/local/bin/npm" "publish"
50 error node v7.6.0
51 error npm  v4.1.2
52 error code E403
53 error "You cannot publish over the previously published version 2.1.52." : angular-cbc
54 error If you need help, you may report this error at:
54 error     <https://github.com/npm/npm/issues>
55 verbose exit [ 1, true ]
